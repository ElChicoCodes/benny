{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 8,
			"minor" : 5,
			"revision" : 4,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 42.0, 85.0, 1533.0, 912.0 ],
		"bglocked" : 0,
		"openinpresentation" : 0,
		"default_fontsize" : 12.0,
		"default_fontface" : 0,
		"default_fontname" : "Arial",
		"gridonopen" : 1,
		"gridsize" : [ 15.0, 15.0 ],
		"gridsnaponopen" : 1,
		"objectsnaponopen" : 1,
		"statusbarvisible" : 2,
		"toolbarvisible" : 1,
		"lefttoolbarpinned" : 0,
		"toptoolbarpinned" : 0,
		"righttoolbarpinned" : 0,
		"bottomtoolbarpinned" : 0,
		"toolbars_unpinned_last_save" : 0,
		"tallnewobj" : 0,
		"boxanimatetime" : 200,
		"enablehscroll" : 1,
		"enablevscroll" : 1,
		"devicewidth" : 0.0,
		"description" : "",
		"digest" : "",
		"tags" : "",
		"style" : "",
		"subpatcher_template" : "",
		"assistshowspatchername" : 0,
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-6",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 1269.0, 843.0, 35.0, 22.0 ],
					"text" : "out 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-5",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 638.0, 848.0, 35.0, 22.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 50.0, 14.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 1269.0, 6.0, 28.0, 22.0 ],
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "Data del(1920000,2);\r\n\r\nBuffer detuning(\"detuning\");\r\n\r\nHistory level_through(1), level_in(1), level_out(0), level_feed(0);\r\nHistory oll(-1);\r\nHistory playgap(0),playgap_t(0),playgap_chase_rate(0);\r\nHistory rechead(0);\r\nHistory filt_y0L(0),filt_y0R(0),filt_y1L(0),filt_y1R(0),filt_y2L(0),filt_y2R(0);\r\n\r\nParam ramptime(1000,min=100,default=1000,max=1920000);\r\nParam looplength(0,min=-1,default=-1,max=1920000); // when it gets this, it starts looping, or whatever it does.\r\nParam highpass(0, min=0,default=0.265);\r\nParam lowbit(0,default = 1);\r\nsigL=0;\r\nsigR=0;\r\n\r\nif(oll!=looplength){\r\n\tif(looplength>0){ //new loop, action all the ramps\r\n\t\tif(oll==0){\r\n\t\t\tlevel_through = 0;\r\n\t\t\tlevel_in = 0;\r\n\t\t\tlevel_feed = 0.96 + 0.05* highpass;\r\n\t\t\tlevel_out = 1;\r\n\t\t\tplaygap = looplength;\r\n\t\t\tplaygap_chase_rate = 0;\r\n\t\t}else{\r\n\t\t\tplaygap_t = looplength;\r\n\t\t\t//playgap_chase_rate = 0.5*(playgap_t-playgap)/samplerate;\r\n\t\t\t\r\n\t\t\tif(playgap_t > playgap) playgap_chase_rate = 0.5;\r\n\t\t\tif(playgap_t < playgap) playgap_chase_rate = -1;\r\n\t\t}\r\n\t}else{\r\n\t\tlevel_through = 1;\r\n\t\tlevel_feed = 0;\r\n\t\tlevel_in = 1;\r\n\t\tlevel_out = 0;\r\n\t}\r\n\toll=looplength;\r\n}\r\nif(playgap>0){\r\n\tif(playgap_chase_rate!=0){\r\n\t\tplaygap+=playgap_chase_rate;\r\n\t\tgapgap=abs(playgap-playgap_t);\r\n\t\tif(gapgap<abs(playgap_chase_rate)){\r\n\t\t\tplaygap_chase_rate=0;\r\n\t\t\tplaygap=playgap_t;\r\n\t\t}\r\n\t}\r\n\tplayhead = rechead - playgap;\r\n\tif(playhead<0)playhead+=1920000;\r\n\tsigL = peek(del,playhead,0, interp = \"linear\");\r\n\tsigR = peek(del,playhead,1, interp = \"linear\");\r\n}\r\n//osigL = sigL;\r\n//osigR = sigR; // these are so you can have signals to the output that don't feed back.\r\n\r\nif(highpass>0){\r\n\tcutoff = highpass*highpass*10000 + cycle(0.32)*100;\r\n\tfilt_clamp = clamp(sin(abs(cutoff) * 2 * PI / samplerate), 0, 1);\r\n\tfilt_clamp2 = clamp(sin(0.3*PI),0,1);\r\n\tsigL2 = mix(filt_y0L, sigL, filt_clamp);\r\n\tsigR2 = mix(filt_y0R, sigR, filt_clamp);\r\n\tfilt_y0L = fixdenorm(sigL2);\r\n\tfilt_y0R = fixdenorm(sigR2);\r\n\tsigL3 = mix(filt_y1L, sigL2, filt_clamp);\r\n\tsigR3 = mix(filt_y1R, sigR2, filt_clamp);\r\n\tfilt_y1L = fixdenorm(sigL3);\r\n\tfilt_y1R = fixdenorm(sigR3);\r\n\tif(lowbit>0){\r\n\t\tsigL3 = round(sigL3*4096)/4096;\r\n\t\tsigR3 = round(sigR3*4096)/4096;\r\n\t}\t\r\n\tsigL -= sigL3;\r\n\tsigR -= sigR3;\r\n\tsigL4 = mix(filt_y2L, sigL, filt_clamp2);\r\n\tsigR4 = mix(filt_y2R, sigR, filt_clamp2);\r\n\tfilt_y2L = fixdenorm(sigL4);\r\n\tfilt_y2R = fixdenorm(sigR4);\r\n\tsigL = sigL4;\r\n\tsigR = sigR4;\r\n\t// i think this is a 2pole highpass - 2 onepoles in a row\r\n}\r\n\t\t\r\npoke(del, in1*slide(level_in,ramptime,ramptime)+sigL*slide(level_feed,ramptime,ramptime), rechead, 0);\r\npoke(del, in2*slide(level_in,ramptime,ramptime)+sigR*slide(level_feed,ramptime,ramptime), rechead, 1);\r\nrechead += 1;\r\nif(rechead>=1920000) rechead-=1920000;\r\n\r\n\r\nout1 = in1*slide(level_through,ramptime,ramptime)+sigL*slide(level_out,ramptime,ramptime);\r\nout2 = in2*slide(level_through,ramptime,ramptime)+sigR*slide(level_out,ramptime,ramptime);\r\nout3 = level_through;",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-3",
					"maxclass" : "codebox",
					"numinlets" : 2,
					"numoutlets" : 3,
					"outlettype" : [ "", "", "" ],
					"patching_rect" : [ 14.0, 38.0, 1274.0, 778.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 14.0, 823.0, 35.0, 22.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 0 ],
					"source" : [ "obj-3", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-6", 0 ],
					"source" : [ "obj-3", 2 ]
				}

			}
 ]
	}

}
