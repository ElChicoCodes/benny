{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 8,
			"minor" : 5,
			"revision" : 6,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 42.0, 85.0, 651.0, 582.0 ],
		"bglocked" : 0,
		"openinpresentation" : 0,
		"default_fontsize" : 12.0,
		"default_fontface" : 0,
		"default_fontname" : "Arial",
		"gridonopen" : 1,
		"gridsize" : [ 15.0, 15.0 ],
		"gridsnaponopen" : 1,
		"objectsnaponopen" : 1,
		"statusbarvisible" : 2,
		"toolbarvisible" : 1,
		"lefttoolbarpinned" : 0,
		"toptoolbarpinned" : 0,
		"righttoolbarpinned" : 0,
		"bottomtoolbarpinned" : 0,
		"toolbars_unpinned_last_save" : 0,
		"tallnewobj" : 0,
		"boxanimatetime" : 200,
		"enablehscroll" : 1,
		"enablevscroll" : 1,
		"devicewidth" : 0.0,
		"description" : "",
		"digest" : "",
		"tags" : "",
		"style" : "",
		"subpatcher_template" : "",
		"assistshowspatchername" : 0,
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-8",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 974.0, 574.0, 35.0, 22.0 ],
					"text" : "out 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 522.0, 574.0, 35.0, 22.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-6",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 129.0, -2.0, 28.0, 22.0 ],
					"text" : "in 4"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-5",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 93.0, -2.0, 28.0, 22.0 ],
					"text" : "in 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 22.0, -2.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 55.0, -2.0, 28.0, 22.0 ],
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "Buffer midi_meters(\"midi_meters_buffer\");\r\nBuffer midi_scopes(\"midi_scopes_buffer\");\r\nBuffer midi_scopes_change(\"midi_scopes_change_buffer\");\r\n//inputs\r\n//1 = outputno 2 = note 3 = vel 4 = voiceno\r\nindex = in4;\r\nvflag, ch, held, pmin,pmax,minv,maxv  = peek(midi_meters, index, 0, channels = 7);\r\n\r\nono = in1;\r\nt_ind = (128*index + ono);  //128 outputs per voice\r\nnote = in2;\r\nm_offs = t_ind * 128; //128 notes in a midi keyboard range\r\nm_ind = note + m_offs;\r\nvcheck = (vflag == -1)||(vflag == ono);\r\nch = 0;\r\nvv=abs(in3);\r\n\r\nif(in3 == 0){\r\n\t//remove from scopes\r\n\told = peek(midi_scopes, m_ind, 0);\r\n\tif(old != 0){\r\n\t\tpoke(midi_scopes,0,m_ind,0);\r\n\t\t//reduce held notecount for that output by 1.\r\n\t\tif(vcheck){\r\n\t\t\tch=1;\r\n\t\t\theld -= (held>=1);\r\n\t\t\tif(held < 1){\r\n\t\t\t\tpmin = 128;\r\n\t\t\t\tpmax = 0;\r\n\t\t\t\tmaxv = 0;\r\n\t\t\t\tminv = 128;\r\n\t\t\t}else{\r\n\t\t//if it was any kind of min or max, recalculate those\r\n\t\t\t\tif(note == pmin){\r\n \t\t\t\t\tpmin = 128;\r\n\t\t\t\t\tfor(x = note; x< 128 ; x+=1){\r\n\t\t\t\t\t\ty = peek(midi_scopes, m_offs+x, 0);\r\n\t\t\t\t\t\tif(y!=0){\r\n\t\t\t\t\t\t\tpmin = x;\r\n\t\t\t\t\t\t\tx=128;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(note == pmax){\r\n \t\t\t\t\tpmax = 0;\r\n\t\t\t\t\tfor(x = note; x>= 0 ; x-=1){\r\n\t\t\t\t\t\ty = peek(midi_scopes, m_offs+x, 0);\r\n\t\t\t\t\t\tif(y!=0){\r\n\t\t\t\t\t\t\tpmax = x;\r\n\t\t\t\t\t\t\tx=-1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n \t\t\t\t}\r\n\t\t\t\tif(old == minv){\r\n\t\t\t\t\tminv = 128;\r\n\t\t\t\t\tfor(x = pmin; x<= pmax ; x+=1){\r\n\t\t\t\t\t\ty = abs(peek(midi_scopes, m_offs+x, 0));\r\n\t\t\t\t\t\tif((y!=0)&&(y<minv)){\r\n\t\t\t\t\t\t\tminv = y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(old == maxv){\r\n\t\t\t\t\tmaxv = 0;\r\n\t\t\t\t\tfor(x = pmin; x<= pmax ; x+=1){\r\n\t\t\t\t\t\ty = abs(peek(midi_scopes, m_offs+x, 0));\r\n\t\t\t\t\t\tif(y>maxv){\r\n\t\t\t\t\t\t\tmaxv = y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tpoke(midi_scopes_change, 1,t_ind,0);\r\n}else{\r\n\t//add to scopes, if negative send a message to schedule wiping it in a moment\r\n\told = peek(midi_scopes,m_ind,0);\r\n\tpoke(midi_scopes,in3, m_ind, 0);\r\n\tpoke(midi_scopes_change, 1,t_ind,0);\r\n\tif(vcheck){\r\n\t\tif(old == 0){//increase note held  count\r\n\t\t\theld += 1; //(in3>0);\r\n\t\t\tch = 1;\r\n\t\t}\r\n\t\tif(held == 1){\r\n\t\t\tpmin = note;\r\n\t\t\tpmax = note;\r\n\t\t\tminv = vv;\r\n\t\t\tmaxv = vv;\r\n\t\t\tch = 1;\r\n\t\t}else{\r\n\t\t\tif(note < pmin){\r\n \t\t\t\tpmin = note;\r\n\t\t\t\tch=1;\r\n\t\t\t}\r\n\t\t\tif(note > pmax){\r\n\t\t\t\tpmax = note;\r\n\t\t\t\tch=1;\r\n\t\t\t}\r\n\t\t\tif(vv < minv){\r\n\t\t\t\tminv = vv;\r\n\t\t\t\tch=1;\r\n\t\t\t}\r\n\t\t\tif(vv > maxv){\r\n\t\t\t\tmaxv = vv;\r\n\t\t\t\tch=1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nif(ch > 0){\r\n\t//poke(midi_meters, index, vflag, 0);\r\n\tpoke(midi_meters, ch, index, 1);\r\n\tpoke(midi_meters, held, index, 2);\r\n\tpoke(midi_meters, pmin, index, 3);\r\n\tpoke(midi_meters, pmax, index, 4);\r\n\tpoke(midi_meters, minv, index, 5);\r\n\tpoke(midi_meters, maxv, index, 6);\r\n}\r\nif(in3 < 0){\r\n\tout1 = in1; //m_ind; //the output is used to turn off negative notes.\r\n}else{\r\n\tout1 = -1;\r\n//\tout3 = maxv;\r\n}\r\nout2 = in2;\r\nout3 = in4;",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-3",
					"maxclass" : "codebox",
					"numinlets" : 4,
					"numoutlets" : 3,
					"outlettype" : [ "", "", "" ],
					"patching_rect" : [ 22.0, 27.0, 1019.0, 542.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 22.0, 574.0, 35.0, 22.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"source" : [ "obj-3", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-8", 0 ],
					"source" : [ "obj-3", 2 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 2 ],
					"source" : [ "obj-5", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 3 ],
					"source" : [ "obj-6", 0 ]
				}

			}
 ]
	}

}
