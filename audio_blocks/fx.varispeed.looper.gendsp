{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 8,
			"minor" : 5,
			"revision" : 7,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"classnamespace" : "dsp.gen",
		"rect" : [ 40.0, 82.0, 1061.0, 595.0 ],
		"bglocked" : 0,
		"openinpresentation" : 0,
		"default_fontsize" : 12.0,
		"default_fontface" : 0,
		"default_fontname" : "Arial",
		"gridonopen" : 1,
		"gridsize" : [ 15.0, 15.0 ],
		"gridsnaponopen" : 1,
		"objectsnaponopen" : 1,
		"statusbarvisible" : 2,
		"toolbarvisible" : 1,
		"lefttoolbarpinned" : 0,
		"toptoolbarpinned" : 0,
		"righttoolbarpinned" : 0,
		"bottomtoolbarpinned" : 0,
		"toolbars_unpinned_last_save" : 0,
		"tallnewobj" : 0,
		"boxanimatetime" : 200,
		"enablehscroll" : 1,
		"enablevscroll" : 1,
		"devicewidth" : 0.0,
		"description" : "",
		"digest" : "",
		"tags" : "",
		"style" : "",
		"subpatcher_template" : "",
		"assistshowspatchername" : 0,
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-6",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 684.0, 645.0, 35.0, 22.0 ],
					"text" : "out 4"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-5",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 585.0, 653.0, 35.0, 22.0 ],
					"text" : "out 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 515.0, 662.0, 35.0, 22.0 ],
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 3.0, 4.0, 28.0, 22.0 ],
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 813.0, 4.0, 28.0, 22.0 ],
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "Buffer buff(\"Waves.1\");\r\nBuffer prm(\"voice_parameter_buffer\");\r\n\r\nHistory current_position(0);\r\nHistory next_position(0);\r\nHistory current_read(0);\r\nHistory current_write(0);\r\nHistory playing(0);\r\n\r\nHistory slowcounter(0);\r\nHistory channel,rate,rinv,start,end,looplen,enabled(0),record,preserve,xfade,ixfade,modein2;\r\nHistory length(0),ilength(0),before_end,before_start;\r\nHistory posmod_last(0), last_write(0);\r\nHistory fade_offset(0), fade_stage(0), fade_count(0);\r\n\r\nHistory r_level(0), r2_level(0), w_level(0), w2_level(0), w_p(1), w2_p(1);\r\nHistory ixr, ixw, ixw2;\r\nHistory ixp(0); //gradients for readfade, w1l, w2l, preserve changes\r\n\r\n  // if fade_level>0 it does a second head, at position+fade_offset, unless fade_offset==0, in\r\n  // which case it's doing a fade out\r\nHistory ot(-1), oj(-1);\r\n\r\nParam voice_is(0, min=0,default=0,max=4096);\r\nParam voice_offset(0);\r\nParam t(-1);\r\nParam j(-1);\r\n\r\nslowcounter-=1;\r\nif(slowcounter<0){\r\n\tlength = dim(buff);\r\n\tilength = 1/length;\r\n\tslowcounter=vectorsize;\r\n\tchannel = floor((peek(prm,1+ voice_offset,0, channels=1)*2));\r\n\trate = (32*peek(prm, 2+ voice_offset, 0,channels=1)-16);\r\n\tstart = floor(length * peek(prm, 3+ voice_offset,0, channels=1));\r\n\tend = floor(length * peek(prm, 4+ voice_offset,0, channels=1));\r\n\tif(end>=start){\r\n\t\tlooplen = end-start;\r\n\t}else{\r\n\t\tlooplen = length - start + end;\r\n\t}\r\n\t// TODO to be safe, should force looplen > 3x xfade\r\n\t\r\n\toe=enabled;\r\n\tenabled = (peek(prm, 5+ voice_offset,0, channels=1)>0.5);\r\n\tif(looplen==0){\r\n\t\tenabled=0;\r\n\t\tplaying=0;\r\n\t}\r\n\tif(enabled>oe) playing=1;\r\n\trecord = peek(prm, 6+ voice_offset,0, channels=1);\r\n\tpreserve = peek(prm, 7+ voice_offset,0, channels=1);\r\n\txfade = samplerate*0.1*peek(prm, 8+voice_offset,0, channels=1);\r\n\tif(xfade<10)xfade=10;\r\n\tixfade = 1/xfade;\r\n\tmodein2 = (peek(prm, 9 + voice_offset,0, channels=1)>0.5);\r\n\tbefore_end = end - xfade;\r\n\tif(before_end<0) before_end += length;\r\n\tbefore_start = start + xfade;\r\n\tif(before_start>length) before_start -= length;\r\n\tif(fade_stage == 0){\r\n\t\tif(t!=ot){\r\n\t\t\tot = t;\r\n\t\t\tif(t>-1){\r\n\t\t\t\tif(playing){\r\n\t\t\t\t\tfade_offset = next_position - start;\r\n\t\t\t\t\tfade_stage = 0.5;\r\n\t\t\t\t\tfade_count = xfade;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tplaying = 1;\r\n\t\t\t\t\tfade_offset = 0;\r\n\t\t\t\t\tfade_stage = 0.5;\r\n\t\t\t\t\tfade_count = xfade;\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tif(j!=oj){\r\n\t\t\toj = j;\r\n\t\t\tif(j>-1){\r\n\t\t\t\tif(playing){\r\n\t\t\t\t\tfade_offset = next_position - j;\r\n\t\t\t\t\tfade_stage = 0.5;\r\n\t\t\t\t\tfade_count = xfade;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tplaying = 1;\r\n\t\t\t\t\tfade_offset = 0;\r\n\t\t\t\t\tfade_stage = 0.5;\r\n\t\t\t\t\tfade_count = xfade;\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\nws=0;\r\ndiag = 0;\r\nif(playing){\r\n\tstep=0;\r\n\tif(modein2==0){\r\n\t\tstep = rate * (1+in2);\r\n\t\tposmod_last = 0;\r\n\t}else{\r\n\t\ti2l = in2 * length;\r\n\t\tstep = rate + i2l - posmod_last;\r\n\t\tposmod_last = i2l;\r\n\t}\r\n\t\r\n\t//if step>xfade, call it a jump?\r\n\t\r\n\tnext_position += step;\r\n\tnp_i = floor(next_position);\r\n\tnp_f = next_position - np_i;\r\n\tgain = step * record;\r\n\tcurrent_write += in1 * gain; //this isn't quite right - if a written sample goes over the boundary into the next one then the overhang is carried over\r\n\t\r\n\tif(np_i != current_position){\r\n\t\tnp_i2=0;\r\n\t\tcarryover = in1 * np_f * record;// / abs(step);\r\n\t\tcurrent_write -= carryover;\r\n\t\tfill = abs(np_i-current_position);\r\n\t\tif(step<0){\r\n\t\t\tif((fade_stage==0)&&(next_position<=before_start)){\r\n\t\t\t\tif(enabled){\r\n\t\t\t\t\tfade_offset = looplen;\r\n\t\t\t\t\tfade_stage = 1;\r\n\t\t\t\t\tfade_count = xfade;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfade_stage = -2; //TODO fade out both reading and writing, then stop.\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnp_i2 = np_i - 1;\r\n\t\t\tif(np_i2<0) np_i2+=length;\r\n\t\t}else{\r\n\t\t\tif((fade_stage==0)&&(next_position>=before_end)){\r\n\t\t\t\tif(enabled){\r\n\t\t\t\t\tfade_offset = -looplen;\r\n\t\t\t\t\tfade_stage = 1;\r\n\t\t\t\t\tfade_count = xfade;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfade_stage = -2; //TODO fade out both reading and writing, then stop.\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnp_i2 = np_i + 1;\r\n\t\t\tif(np_i2>=length) np_i2-=length;\r\n\t\t}\r\n\t\t\r\n\t\tif(fade_stage > 0){\r\n\t\t\tfade_count = fade_count + 1;\r\n\t\t\tif(fade_count >= xfade){ //stage change\r\n\t\t\t\tfade_count = 0;\r\n\t\t\t\tfade_stage += 1;\r\n\t\t\t//\tslowcounter += xfade;//hacky! this prevents input causing another jump, but loops still could so..\r\n\t\t\t\t\r\n\t\t\t\tif(fade_stage==-2){\r\n\t\t\t\t\tixw = -ixfade;\t\t\r\n\t\t\t\t\tixr = -ixfade;\r\n\t\t\t\t\tixp = ixfade * (1 - preserve);\r\n\t\t\t\t}else if(fade_stage==-1){\r\n\t\t\t\t\tplaying = 0;\r\n\t\t\t\t}else if(fade_stage > 4){\r\n\t\t\t\t\tfade_stage = 0;\r\n\t\t\t\t\tnext_position += fade_offset;\r\n\t\t\t\t\tif(next_position>=length) next_position-=length;\r\n\t\t\t\t\tif(next_position<0) next_position+=length;\r\n\t\t\t\t\tnp_i = floor(next_position);\r\n\t\t\t\t\tnp_f = next_position-np_i;\r\n\t\t\t\t\tcurrent_position += fade_offset;\r\n\t\t\t\t\tif(current_position>=length) current_position-=length;\r\n\t\t\t\t\tif(current_position<0) current_position+=length;\r\n\t\t\t\t\tfade_offset = 0;\r\n\t\t\t\t\tw_level = 1; //w2 _level;\r\n\t\t\t\t\tw2_level = 0;\r\n\t\t\t\t\tr_level = 1; //r2_level;\r\n\t\t\t\t\tr2_level = 0;\r\n\t\t\t\t\tw2_p = 1;\r\n\t\t\t\t\tw_p = preserve;\r\n\t\t\t\t\t//swap read heads\r\n\t\t\t\t\t//swap write heads\r\n\t\t\t\t}else if(fade_stage > 3){\r\n\t\t\t\t\t//start write head 1 fade out / preserve->1 fade\r\n\t\t\t\t\tw_level = 1;\r\n\t\t\t\t\tixw = -ixfade;\r\n\t\t\t\t\tixp = ixfade * (1 - preserve);\r\n\t\t\t\t}else{//if it gets 2,3,it fires write2 fadein then read xfade.\r\n\t\t\t\t\t// if it gets 2.5 it fires both at once and moves on to the next stage.\r\n \t\t\t\t\tif(fade_stage > 2.4){\r\n\t\t\t\t\t\t//set read head 2 offset (same as write head 2 offset below)\r\n\t\t\t\t\t\t//start read head xfade\r\n\t\t\t\t\t\tr_level = 1;\r\n\t\t\t\t\t\tr2_level = 0;\r\n\t\t\t\t\t\tixr = -ixfade;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif((fade_stage > 1.9)&&(fade_stage < 2.6)){\r\n\t\t\t\t\t\t//set write head 2 offset (this is done when loop/jump triggered - fade_offset)\r\n\t\t\t\t\t\t//start write head 2 fade in / 1->preserve fade\r\n\t\t\t\t\t\tw_level = 1;\r\n\t\t\t\t\t\tw2_level = 0;\r\n\t\t\t\t\t\tr_level = 1;\r\n\t\t\t\t\t\tr2_level = 0;\r\n\t\t\t\t\t\tw2_p = 1;\r\n\t\t\t\t\t\tixw2 = ixfade;\r\n\t\t\t\t\t\tixp = -(1 - preserve) * ixfade;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcurrent_read = r_level * (peek(buff, np_i, channel) * (1-np_f) + np_f*peek(buff, np_i2, channel));\r\n\r\n\t\t\tif(fade_stage<0){ //fade to halt\r\n\t\t\t\tw_level += ixw;\r\n\t\t\t\tr_level += ixr;\r\n\t\t\t\tw2_level+=ixw;\r\n\t\t\t\tr2_level+=ixr;\r\n\t\t\t\tw_level = max(w_level,0);\r\n\t\t\t\tw2_level = max(w2_level,0);\r\n\t\t\t\tr_level = max(r_level,0);\r\n\t\t\t\tr2_level = max(r2_level,0);\r\n\t\t\t\tw_p += ixp;\r\n\t\t\t\tw2_p = max(w_p, w2_p);\r\n\t\t\t}else if(fade_stage>3.4){\r\n\t\t\t\t//start write head 1 fade out / preserve->1 fade\r\n\t\t\t\tw_level += ixw;\r\n\t\t\t\tw_p += ixp;\t\t\t\t\r\n\t\t\t}else{\r\n \t\t\t\tif(fade_stage>2.4){\r\n\t\t\t\t\t//read head xfade\r\n\t\t\t\t\tr_level += ixr;\r\n\t\t\t\t\tr2_level -= ixr;\r\n\t\t\t\t}\r\n\t\t\t\tif((fade_stage>1.9)&&(fade_stage<2.6)){\r\n\t\t\t\t\tw2_level += ixw2;\r\n\t\t\t\t\tw2_p += ixp;\r\n\t\t\t\t\t// write head 2 fade in / preserve from 1 to value\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t\tif(r2_level>0){\r\n\t\t\t\th2 = next_position + fade_offset;\r\n\t\t\t\tif(h2>=length) h2-=length;\r\n\t\t\t\tif(h2<0) h2+=length;\r\n\t\t\t\th2_i = floor(h2);\r\n\t\t\t\th2_i2 = h2_i + ((step>0)?1:-1);\r\n\t\t\t\tif(h2_i2>=length)h2_i2-=length;\r\n\t\t\t\tif(h2_i2<0)h2_i2+=length;\r\n\t\t\t\th2_f = h2 - h2_i;\r\n\t\t\t\tcurrent_read *= r_level;\r\n\t\t\t\tcurrent_read += r2_level * (peek(buff, h2_i, channel) * (1-h2_f) + h2_f*peek(buff, h2_i2, channel));\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tw_p = preserve;\r\n\t\t\tw2_p = preserve;\r\n\t\t\tcurrent_read = peek(buff, np_i, channel) * (1-np_f) + np_f*peek(buff, np_i2, channel);\r\n\t\t}\r\n\r\n\t\tw = current_write;\r\n\t\tif(fill==1){\r\n\t\t\tpoke(buff,w*w_level,current_position,channel,w_p);\r\n\t\t\tif(fade_stage > 0){\r\n\t\t\t\th2 = current_position + fade_offset;\r\n\t\t\t\tif(h2>=length) h2-=length;\r\n\t\t\t\tif(h2<0) h2+=length;\r\n\t\t\t\th2_i = floor(h2);\r\n\t\t\t\tpoke(buff,w*w2_level,h2_i,channel, w2_p);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tws = current_write / fill;\r\n\t\t\tcoeff = (ws - last_write) / step;\r\n\t\t\tw = last_write;\r\n\t\t\tif(step>0){\r\n\t\t\t\tif(np_i>current_position){ //one for loop, as it hasn't wrapped\r\n\t\t\t\t\tif(fade_stage>0){\r\n\t\t\t\t\t\tpg = ixp/step;\r\n\t\t\t\t\t\tpo = w2_p;\r\n\t\t\t\t\t\twhile(current_position<np_i){\r\n\t\t\t\t\t\t\tw += coeff;\r\n\t\t\t\t\t\t\tpo += pg;\r\n\t\t\t\t\t\t\th2 = current_position + fade_offset;\r\n\t\t\t\t\t\t\tif(h2>=length) h2-=length;\r\n\t\t\t\t\t\t\tif(h2<0) h2+=length;\r\n\t\t\t\t\t\t\th2_i = floor(h2);\r\n\t\t\t\t\t\t\tpoke(buff,w*w2_level,h2_i,channel, po);\r\n\t\t\t\t\t\t\tpoke(buff,w*w_level,current_position,channel,w_p);\r\n\t\t\t\t\t\t\tcurrent_position+=1;\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\twhile(current_position<np_i){\r\n\t\t\t\t\t\t\tw += coeff;\r\n\t\t\t\t\t\t\tpoke(buff,w,current_position,channel,preserve);\r\n\t\t\t\t\t\t\tcurrent_position+=1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdiag = -1;\r\n\t\t\t\t\tif(fade_stage>0){ // TWO writes during fade stages 1-3\r\n\t\t\t\t\t\twhile(current_position<end){\r\n\t\t\t\t\t\t\tw += coeff;\r\n\t\t\t\t\t\t\t//wfl+=wflc;\r\n\t\t\t\t\t\t\tpoke(buff,w,current_position,channel,preserve);\r\n\t\t\t\t\t\t\t//poke(buff,w*wfl,xcp,channel, (1-wfl)+preserve*wfl);\r\n\t\t\t\t\t\t\t//xcp+=1;\r\n\t\t\t\t\t\t\tcurrent_position+=1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrent_position=start;\r\n\t\t\t\t\t\twhile(current_position<np_i){\r\n\t\t\t\t\t\t\tw += coeff;\r\n\t\t\t\t\t\t\t//wfl+=wflc;\r\n\t\t\t\t\t\t\tpoke(buff,w,current_position,channel,preserve);\t\r\n\t\t\t\t\t\t\t//poke(buff,w*wfade_level,xcp,channel, (1-wfl)+preserve*wfl);\r\n\t\t\t\t\t\t\t//xcp+=1;\t\t\t\t\t\r\n\t\t\t\t\t\t\tcurrent_position+=1;\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\twhile(current_position<end){\r\n\t\t\t\t\t\t\tw += coeff;\r\n\t\t\t\t\t\t\tpoke(buff,w,current_position,channel,preserve);\r\n\t\t\t\t\t\t\tcurrent_position+=1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurrent_position=start;\r\n\t\t\t\t\t\twhile(current_position<np_i){\r\n\t\t\t\t\t\t\tw += coeff;\r\n\t\t\t\t\t\t\tpoke(buff,w,current_position,channel,preserve);\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tcurrent_position+=1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(np_i<current_position){ //one for loop, as it hasn't wrapped\r\n\t\t\t\t\tfor(diag=-1;current_position>np_i;current_position-=1){\r\n\t\t\t\t\t\tw -= coeff;\r\n\t\t\t\t\t\tpoke(buff,w,current_position,channel,preserve);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor(diag=-2;current_position>start;current_position-=1){\r\n\t\t\t\t\t\tw -= coeff;\r\n\t\t\t\t\t\tpoke(buff,w,current_position,channel,preserve);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(current_position=end;current_position>np_i;current_position-=1){\r\n\t\t\t\t\t\tw -= coeff;\r\n\t\t\t\t\t\tpoke(buff,w,current_position,channel,preserve);\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\tlast_write = w;\r\n\t\t}\r\n\t\tcurrent_position = np_i;\r\n\t\tcurrent_write = carryover;\r\n\t}\r\n}\r\n\r\nout1 = current_read;\r\nout2 = diag + current_position * ilength;\r\nout3 = w2_level;\r\nout4 = w_level;\r\n",
					"fontface" : 0,
					"fontname" : "<Monospaced>",
					"fontsize" : 12.0,
					"id" : "obj-3",
					"maxclass" : "codebox",
					"numinlets" : 2,
					"numoutlets" : 4,
					"outlettype" : [ "", "", "", "" ],
					"patching_rect" : [ 3.0, 32.0, 790.0, 592.0 ]
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 50.0, 662.0, 35.0, 22.0 ],
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 0 ],
					"source" : [ "obj-1", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-3", 1 ],
					"source" : [ "obj-2", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 0 ],
					"source" : [ "obj-3", 2 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-6", 0 ],
					"source" : [ "obj-3", 3 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-7", 0 ],
					"source" : [ "obj-3", 1 ]
				}

			}
 ]
	}

}
